name: Test and Publish
on:
  push:
    tags:
      - v*
  pull_request:
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.10"]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install MMseqs2 (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y mmseqs2
      
      - name: Install MMseqs2 (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install mmseqs2
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry build
          python -m pip install dist/*.whl

      - name: Run with pytest
        run: |
          pytest tests/

  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest"] # "windows-latest"
        python: ["cp310-*"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install
      
      - name: Build Wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_BUILD: ${{ matrix.python }}
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_BEFORE_BUILD: bash {project}/scripts/download_mmseqs.sh {project}/pymmseqs/bin
      
      - name: Upload wheels artifact
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
    
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      
      - name: Install Poetry
        run: python -m pip install poetry
      
      - name: Build sdist
        run: poetry build
      
      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz
  
  publish_pypi:
    runs-on: ubuntu-latest
    needs: [build, build_sdist]
    if: startsWith(github.ref, 'refs/tags/v')
    environment: pymmseqs-testpypi
    permissions:
      id-token: write
    steps:
      - name: Download wheels and sdist
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true
