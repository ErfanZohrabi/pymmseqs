name: Test and Publish to PyPI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-latest]
        python-version: ["3.10", "3.11"]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install MMseqs2 (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y mmseqs2
      
      - name: Install MMseqs2 (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install mmseqs2
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install .

      - name: Run with pytest
        run: |
          pytest tests/

  build_wheels:
    name: Build wheel  ${{ matrix.python }}-${{ matrix.buildplat[1] }}-${{ matrix.buildplat[2] }}
    needs: test
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      matrix:
        buildplat:
          - [ubuntu-22.04, manylinux_x86_64, ""]
          - [ubuntu-22.04, musllinux_x86_64, ""]
          - [macos-14, macosx_arm64, accelerate]
        
        python: ["cp311", "cp312", "cp313", "cp313t"]
    
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install MMseqs2 (Linux)
        if: matrix.buildplat[0] == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y mmseqs2

      - name: Install MMseqs2 (macOS)
        if: matrix.buildplat[0] == 'macos-14'
        run: |
          brew install mmseqs2
      
       # Used to push the built wheels
      - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: "3.x"
      
      # - name: Setup macOS
      #   if: matrix.buildplat[0] == 'macos-14'
      #   run: |
      #     # Needed due to https://github.com/actions/runner-images/issues/3371
      #     # Supported versions: https://github.com/actions/runner-images/blob/main/images/macos/macos-14-arm64-Readme.md
      #     echo "FC=gfortran-13" >> "$GITHUB_ENV"
      #     echo "F77=gfortran-13" >> "$GITHUB_ENV"
      #     echo "F90=gfortran-13" >> "$GITHUB_ENV"
      #     if [[ ${{ matrix.buildplat[2] }} == 'accelerate' ]]; then
      #       # macosx_arm64 and macosx_x86_64 with accelerate
      #       # only target Sonoma onwards
      #       CIBW="MACOSX_DEPLOYMENT_TARGET=14.0 INSTALL_OPENBLAS=false RUNNER_OS=macOS"
      #       echo "CIBW_ENVIRONMENT_MACOS=$CIBW" >> "$GITHUB_ENV"

      #       # the macos-13 image that's used for building the x86_64 wheel can't test
      #       # a wheel with deployment target >= 14 without further work
      #       echo "CIBW_TEST_SKIP=*-macosx_x86_64" >> "$GITHUB_ENV"
      #     else
      #       # macosx_x86_64 with OpenBLAS
      #       # if INSTALL_OPENBLAS isn't specified then scipy-openblas is automatically installed
      #       CIBW="RUNNER_OS=macOS"
      #       PKG_CONFIG_PATH="$PWD/.openblas"
      #       DYLD="$DYLD_LIBRARY_PATH:/$PWD/.openblas/lib"
      #       echo "CIBW_ENVIRONMENT_MACOS=$CIBW PKG_CONFIG_PATH=$PKG_CONFIG_PATH DYLD_LIBRARY_PATH=$DYLD" >> "$GITHUB_ENV"  
      #     fi

      - name: Build wheels
        uses: pypa/cibuildwheel@ee63bf16da6cddfb925f542f2c7b59ad50e93969  # v2.22.0
        env:
          CIBW_PRERELEASE_PYTHONS: True
          CIBW_FREE_THREADED_SUPPORT: True
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}

      - uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: ${{ matrix.python }}-${{ matrix.buildplat[1] }}-${{ matrix.buildplat[2] }}
          path: ./wheelhouse/*.whl

  build_sdist:
    needs: build_wheels
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Build sdist
        run: |
          pipx run build --sdist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  publish_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
